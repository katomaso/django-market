# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-31 10:29
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models

import django.db.models.deletion
import django.utils.timezone
import market.core.managers
import market.utils.models
import re
import stdimage.models
import django.core.validators

from django.utils.translation import gettext as _

# choose optimized JSONField for default database
if "postgres" in settings.DATABASES['default']['ENGINE']:
    from django.contrib.postgres.fields import jsonb as jsonfield
else:
    import jsonfield


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('invoice', '__first__'),
        ('auth', '__latest__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('password', models.CharField(max_length=128, verbose_name=_('password'))),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name=_('last login'))),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name=_('superuser status'))),
                ('uid', models.SlugField(blank=True, max_length=settings.MARKET_UID_LENGTH, null=True)),
                ('name', models.CharField(blank=True, max_length=50, verbose_name=_('Full name'))),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name=_('Email'))),
                ('slug', models.SlugField(unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\+\\d\\s][\\s0-9]{8,22}$', 32), 'Enter a valid phone number.', 'invalid')], verbose_name=_('Phone number'))),
                ('karma', models.SmallIntegerField(blank=True, default=10, verbose_name=_('Karma'))),
                ('avatar', stdimage.models.StdImageField(blank=True, null=True, upload_to=market.utils.models.upload_to_classname, verbose_name=_('Photo'))),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name=_('staff status'))),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name=_('active'))),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name=_('date joined'))),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name=_('groups'))),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name=_('user permissions'))),
            ],
            options={
                'verbose_name': _('User'),
                'verbose_name_plural': _('Users'),
                'abstract': False,
            },
            managers=[
                ('objects', market.core.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Name/Company')),
                ('street', models.CharField(max_length=255, verbose_name=_('Street'))),
                ('city', models.CharField(max_length=20, verbose_name=_('City'))),
                ('zip_code', models.CharField(max_length=20, null=True, verbose_name=_('Post Code'))),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name=_('State'))),
                ('country', models.CharField(blank=False, max_length=10, null=False, verbose_name=_('Country'), choices=())),
                ('position_x', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, verbose_name=_('Position lng'))),
                ('position_y', models.DecimalField(blank=True, decimal_places=16, max_digits=19, null=True, verbose_name=_('Position lat'))),
                ('business_id', models.CharField(blank=True, max_length=10, null=True, verbose_name=_('Business number'))),
                ('tax_id', models.CharField(blank=True, max_length=12, null=True, verbose_name=_('Tax ID'))),
                ('extra', models.TextField(blank=True, help_text='Will appear on an invoice.', null=True, verbose_name=_('Further description'))),
            ],
            options={
                'verbose_name': _('Address'),
                'verbose_name_plural': _('Addresses'),
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('prefix', models.DecimalField(blank=True, decimal_places=0, max_digits=15, null=True, verbose_name=_('Prefix'))),
                ('number', models.DecimalField(decimal_places=0, max_digits=16, verbose_name=_('Account number'))),
                ('bank', models.DecimalField(decimal_places=0, max_digits=4, verbose_name=_('Bank code'))),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': _('Cart'),
                'verbose_name_plural': _('Carts'),
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('quantity', models.IntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='market.Cart')),
            ],
            options={
                'verbose_name': _('Cart item'),
                'verbose_name_plural': _('Cart items'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('ordering', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, db_index=False, max_length=255)),
                ('path', models.CharField(blank=True, db_index=True, help_text=_("Generated automatically, don't edit"), max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='market.Category')),
            ],
            options={
                'verbose_name': _('Category'),
                'verbose_name_plural': _('Categories'),
                'ordering': ['ordering', 'path'],
            },
        ),
        migrations.CreateModel(
            name='ExtraOrderItemPriceField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('label', models.CharField(max_length=255, verbose_name=_('Label'))),
                ('value', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Amount'))),
                ('data', jsonfield.JSONField(blank=True, null=True, verbose_name=_('Serialized extra data'))),
            ],
            options={
                'verbose_name': _('Extra order item price field'),
                'verbose_name_plural': _('Extra order item price fields'),
            },
        ),
        migrations.CreateModel(
            name='ExtraOrderPriceField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('label', models.CharField(max_length=255, verbose_name=_('Label'))),
                ('value', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Amount'))),
                ('data', jsonfield.JSONField(blank=True, null=True, verbose_name=_('Serialized extra data'))),
                ('is_shipping', models.BooleanField(default=False, editable=False, verbose_name=_('Is shipping'))),
            ],
            options={
                'verbose_name': _('Extra order price field'),
                'verbose_name_plural': _('Extra order price fields'),
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('average_vote', models.FloatField(blank=True, default=2.5, verbose_name=_('rating'))),
                ('num_votes', models.IntegerField(blank=True, default=0, verbose_name=_('votes'))),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('email', models.EmailField(blank=True, help_text=_('Customer support'), max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\+\\d\\s][\\s0-9]{8,22}$', 32), 'Enter a valid phone number.', 'invalid')])),
                ('description', models.TextField(blank=True, null=True, verbose_name=_('Short description of the company'))),
                ('logo', stdimage.models.StdImageField(blank=True, help_text=_('Preferable a square of size 300x300 pixels'), null=True, upload_to=market.utils.models.upload_to_classname, verbose_name=_('Photo'))),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.Address', verbose_name=_('Headquaters'))),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.Category', verbose_name=_('Manufacturer specialization'))),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('name', models.CharField(max_length=255, verbose_name=_('Name'))),
                ('slug', models.SlugField(unique=True, verbose_name=_('Slug'))),
                ('active', models.BooleanField(db_index=True, default=False, verbose_name=_('Active'))),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=_('Date added'))),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=_('Last modified'))),
                ('unit_price', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Unit price'))),
                ('unit_quantity', models.DecimalField(decimal_places=4, max_digits=12, null=False, blank=False, default=Decimal(1))),
                ('unit_measure', models.CharField(max_length=5, null=False, blank=False, choices=(('ks', _("units")), ('g', _("grams")), ('kg', _("kilograms"))), default='ks')),
                ('quantity', models.SmallIntegerField(default=-1, help_text=_('-1 means infinity'), verbose_name=_('Quantity'))),
                ('sold', models.IntegerField(default=0)),
                ('note', models.TextField(blank=True, null=True, verbose_name=_('Comment your offer'))),
                ('shipping_price', market.utils.models.CurrencyField(blank=True, decimal_places=2, default=0, max_digits=30, verbose_name=_('Shipping price'))),
                ('removed', models.BooleanField(default=False, verbose_name=_('Removed'))),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.Category')),
            ],
            options={
                'verbose_name': _('Offer'),
                'verbose_name_plural': _('Offers'),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('uid', models.SlugField(blank=True, max_length=settings.MARKET_UID_LENGTH, null=True)),
                ('shipping', models.BooleanField(default=False, help_text=_('Marks if seller ships the order'))),
                ('status', models.IntegerField(choices=[(10, 'Processing'), (20, 'Confirming'), (25, 'Unconfirmed'), (30, 'Confirmed'), (40, 'Paid'), (45, 'Shipped'), (50, 'Received'), (60, 'Canceled')], default=10, verbose_name=_('Status'))),
                ('subtotal', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Order subtotal'))),
                ('total', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Order Total'))),
                ('shipping_address_text', models.TextField(blank=True, null=True, verbose_name=_('Shipping address'))),
                ('billing_address_text', models.TextField(blank=True, null=True, verbose_name=_('Billing address'))),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=_('Created'))),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=_('Updated'))),
                ('message', models.TextField(blank=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='suborders', to='market.Order')),
            ],
            options={
                'verbose_name': _('Order'),
                'verbose_name_plural': _('Orders'),
                'ordering': ['status', 'created'],
            },
        ),
        migrations.CreateModel(
            name='OrderExtraInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('text', models.TextField(blank=True, verbose_name=_('Extra info'))),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_info', to='market.Order', verbose_name=_('Order'))),
            ],
            options={
                'verbose_name': _('Order extra info'),
                'verbose_name_plural': _('Order extra info'),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('item_reference', models.CharField(max_length=255, verbose_name=_('Item reference'))),
                ('item_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=_('Item name'))),
                ('unit_price', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Unit price'))),
                ('quantity', models.IntegerField(verbose_name=_('Quantity'))),
                ('subtotal', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Line subtotal'))),
                ('total', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Line total'))),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='market.Order', verbose_name=_('Order'))),
            ],
            options={
                'verbose_name': _('Order item'),
                'verbose_name_plural': _('Order items'),
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('amount', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30, verbose_name=_('Amount'))),
                ('transaction_id', models.CharField(help_text="The transaction processor's reference", max_length=255, verbose_name=_('Transaction ID'))),
                ('payment_method', models.CharField(help_text=_('The payment backend used to process the purchase'), max_length=255, verbose_name=_('Payment method'))),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Order', verbose_name=_('Order'))),
            ],
            options={
                'verbose_name': _('Order payment'),
                'verbose_name_plural': _('Order payments'),
            },
        ),
        migrations.CreateModel(
            name='PaymentBackend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('name', models.CharField(max_length=50)),
                ('url_name', models.SlugField()),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=market.utils.models.upload_to_classname)),
            ],
            options={
                'verbose_name': _('Payment backend'),
                'verbose_name_plural': _('Payment backends'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('average_vote', models.FloatField(blank=True, default=2.5, verbose_name=_('rating'))),
                ('num_votes', models.IntegerField(blank=True, default=0, verbose_name=_('votes'))),
                ('name', models.CharField(max_length=255, verbose_name=_('Name'))),
                ('slug', models.SlugField(unique=True, verbose_name=_('Slug'))),
                ('active', models.BooleanField(db_index=True, default=True, verbose_name=_('Active'))),
                ('removed', models.BooleanField(default=False, verbose_name=_('Removed'))),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name=_('Date added'))),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=_('Last modified'))),
                ('photo', stdimage.models.StdImageField(blank=True, null=True, upload_to=market.utils.models.upload_to_classname, verbose_name=_('Photo'))),
                ('description', models.TextField(verbose_name=_('Description of product'))),
                ('extra', models.TextField(blank=True, help_text='One information per line. Use colons. (e.g. wight: 20kg)', null=True, verbose_name=_('Structured information'))),
                ('expedition_days', models.SmallIntegerField(blank=True, default=0, verbose_name=_('Days to expedition'))),
                ('price', market.utils.models.CurrencyField(blank=True, decimal_places=2, default=Decimal('0.0'), help_text="The best price from all offers. Don't edit manually.", max_digits=30, null=True, verbose_name=_('Best price'))),
                ('tax', models.DecimalField(blank=True, decimal_places=0, default=Decimal('21'), help_text='Tax in % (e.g. 21).', max_digits=2, verbose_name=_('Tax'))),
                ('sold', models.IntegerField(default=0)),
                ('editable', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Category', verbose_name=_('Category'))),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='market.Manufacturer', verbose_name=_('Manufacturer'))),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('uid', models.SlugField(blank=True, max_length=settings.MARKET_UID_LENGTH, null=True)),
                ('average_vote', models.FloatField(blank=True, default=2.5, verbose_name=_('rating'))),
                ('num_votes', models.IntegerField(blank=True, default=0, verbose_name=_('votes'))),
                ('name', models.CharField(help_text='No need to be official or unique.', max_length=100, verbose_name=_('Vendor name'))),
                ('motto', models.CharField(max_length=255, verbose_name=_('Motto'))),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name=_('Description of your vendor'))),
                ('logo', stdimage.models.StdImageField(blank=True, help_text=_('Preferable a square of size 300x300 pixels'), null=True, upload_to=market.utils.models.upload_to_classname, verbose_name=_('Photo'))),
                ('ships', models.BooleanField(default=True)),
                ('background', stdimage.models.StdImageField(blank=True, help_text=_('Preferable a rectagle of size 960x720 pixels'), null=True, upload_to=market.utils.models.upload_to_classname, verbose_name=_('Background'))),
                ('openings', models.TextField(blank=True, null=True, verbose_name=_('Opening hours'))),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deactivated', models.DateTimeField(blank=True, null=True)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='market.Address', verbose_name=_('Billing Address'))),
                ('bank_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.BankAccount')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='market.Category', verbose_name=_('Category'))),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_locations+', to='market.Address', verbose_name=_('Placement of your vendor'))),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(help_text='Auth information for the payment service')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.PaymentBackend')),
            ],
            options={
                'verbose_name': 'Vendor Payment',
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('invoice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='invoice.Invoice')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Vendor')),
            ],
            options={
                'verbose_name': _('Bill'),
                'verbose_name_plural': _('Bills'),
                'ordering': ['-period_end'],
            },
            bases=('invoice.invoice',),
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('period', models.PositiveIntegerField(choices=[(1, 'monthly'), (3, 'quartely'), (6, 'half-yearly'), (12, 'yearly')], default=3)),
                ('next_period', models.PositiveIntegerField(choices=[(1, 'monthly'), (3, 'quartely'), (6, 'half-yearly'), (12, 'yearly')], default=3, verbose_name=_('Next billing period'))),
                ('last_billed', models.DateField(default=django.utils.timezone.now)),
                ('next_billing', models.DateField(blank=True, help_text=_('Is set automatically'))),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='market.Vendor')),
            ],
            options={
                'verbose_name': _('Billing'),
                'verbose_name_plural': _('Billings'),
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('code', models.SlugField(help_text=_('Has to be UPPER CASE'), max_length=8)),
                ('expiration', models.DateTimeField()),
                ('usages', models.SmallIntegerField()),
            ],
            options={
                'verbose_name': _('Campaign'),
                'verbose_name_plural': _('Campaigns'),
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('name', models.CharField(max_length=120)),
                ('percent', models.SmallIntegerField(default=100, help_text='Discount in %')),
                ('usages', models.SmallIntegerField(default=1, help_text=_('Usages in months'))),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tariff_discounts', to='market.Vendor')),
            ],
            options={
                'verbose_name': _('Discount'),
                'verbose_name_plural': _('Discounts'),
            },
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('price', market.utils.models.CurrencyField(decimal_places=2, default=0, max_digits=30)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Vendor')),
            ],
            options={
                'verbose_name': _('Statistics'),
                'verbose_name_plural': _('Statistics'),
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name=_('ID'))),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(null=True)),
                ('slug', models.SlugField()),
                ('daily', market.utils.models.CurrencyField(decimal_places=2, default=0, max_digits=30)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('quantity', models.IntegerField()),
                ('price', market.utils.models.CurrencyField(decimal_places=2, default=Decimal('0.0'), max_digits=30)),
            ],
            options={
                'verbose_name': _('Tariff'),
                'verbose_name_plural': _('Tariffs'),
                'ordering': ('daily',),
            },
        ),
    ]
