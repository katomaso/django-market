    # -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-30 09:17
from __future__ import unicode_literals

import pg_fts
import pg_fts.fields
import pg_fts.migrations

from django.conf import settings
from django.db import migrations

from market.utils.migrate import mark_migrated


class Migration(migrations.Migration):

    def __init__(self, name, app_label):
        """Fake migration for package 'invoice'.

        We need to mark this migration as performed manually.
        """
        super(Migration, self).__init__(name, app_label='core')

    dependencies = [
        ('core', '0002_foreign_keys'),
    ]

    operations = [
        migrations.AddField(
            model_name='manufacturer',
            name='fts',
            field=pg_fts.fields.TSVectorField(
                default='', dictionary=settings.PG_FT_LANGUAGE, editable=False,
                fields=(('name', 'A'), ('description', 'B')),
                null=True, serialize=False),
        ),
        migrations.AddField(
            model_name='product',
            name='fts',
            field=pg_fts.fields.TSVectorField(
                default='', dictionary=settings.PG_FT_LANGUAGE, editable=False,
                fields=(('name', 'A'), ('description', 'B'), ('extra', 'D')),
                null=True, serialize=False),
        ),
        migrations.AddField(
            model_name='vendor',
            name='fts',
            field=pg_fts.fields.TSVectorField(
                default='', dictionary=settings.PG_FT_LANGUAGE, editable=False,
                fields=(('name', 'A'), ('motto', 'B'), ('description', 'C')),
                null=True, serialize=False),
        ),
        pg_fts.migrations.CreateFTSIndexOperation(
            name='manufacturer',
            fts_vector='fts',
            index='gin'
        ),
        pg_fts.migrations.CreateFTSTriggerOperation(
            name='manufacturer',
            fts_vector='fts',
        ),
        pg_fts.migrations.CreateFTSIndexOperation(
            name='product',
            fts_vector='fts',
            index='gin'
        ),
        pg_fts.migrations.CreateFTSTriggerOperation(
            name='product',
            fts_vector='fts',
        ),
        pg_fts.migrations.CreateFTSIndexOperation(
            name='vendor',
            fts_vector='fts',
            index='gin'
        ),
        pg_fts.migrations.CreateFTSTriggerOperation(
            name='vendor',
            fts_vector='fts',
        ),
        migrations.RunPython(mark_migrated("search", "0001_monkey_patch_core")),
    ]
